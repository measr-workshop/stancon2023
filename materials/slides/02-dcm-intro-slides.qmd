---
title: Diagnostic classification </br> models
subtitle: A brief introduction
author: W. Jake Thompson, Ph.D.
format:
  measr-quarto-revealjs:
    progress: false
    title-slide-attributes: 
      data-background-image: figure/backgrounds/ku-title.png
      data-background-size: contain
---

# Conceptual foundations {background-image="figure/backgrounds/section.png" background-size="contain"}

```{r setup}
library(tidyverse)
library(ggmeasr)
library(ggdist)
library(magick)
library(distributional)
library(knitr)
library(measr)

opts_chunk$set(
  fig.width = 7,
  fig.asp = 0.618,
  fig.align = "center"
)


set_theme(plot_margin = margin(5, 0, 0, 0))
```

## {data-menu-title="Classic psychometrics" background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column width="20%"}
* Traditional assessments and psychometric models measure an overall skill or ability
* Assume a continuous latent trait
:::

:::{.column width="80%"}
```{r}
#| out-width: 100%
#| out-height: 90%
#| fig-alt: "A normal distribution with team logos from the National Women's Soccer League overlayed."

logos <- read_rds("data/nwsl.rds") |> 
  mutate(x = (spi - mean(spi)) / sd(spi)) |> 
  arrange(spi) |> 
  mutate(y = case_when(team == "Kansas City" ~ 0.12,
                       team == "Angel City" ~ 0.25,
                       team == "NJ/NY Gotham" ~ 0.25,
                       team == "Houston" ~ 0.12,
                       team == "North Carolina" ~ 0.25,
                       team == "Reign" ~ 0.12,
                       .default = 0.02))

prior(normal(0, 1), class = "intercept") |> 
  parse_dist(prior_def) |> 
  ggplot(aes(xdist = .dist_obj)) +
  stat_slab(color = palette_measr[1], fill = palette_measr[3]) -> base

width <- 0.5
for (i in 1:nrow(logos)) {
  img <- as.raster(image_read(logos$logo[i]))
  
  base <- base +
    annotation_raster(img,
                      logos$x[i] - (width / 2),
                      logos$x[i] + (width / 2),
                      logos$y[i], logos$y[i] + 0.15)
}

base +
  labs(x = "Team Strength", y = NULL) +
  theme(axis.text.y = element_blank(),
        axis.title.y = element_blank())
```
:::
:::

## Traditional methods {background-image="figure/backgrounds/default.png" background-size="contain"}

* The output is a weak ordering of teams due to error in estimates
  * Confident Portland Thorns are the best
  * Not confident who is second best (OL Reign, North Carolina Courage, San Diego Wave)

* Limited in the types of questions that can be answered. 
  * Why is Kansas City so low?
  * What aspects are teams competent/proficient in?
  * How much skill is "enough" to pass?
  
## Soccer example {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}

:::{.column width="30%"}
* Rather than measuring overall team strength, we can break soccer down into set of skills or *attributes*
  * Finishing
  * Possession
  * Defending
  * Goalkeeping
:::

:::{.column width="70%"}
```{r}
#| fig-asp: 0.3
#| out-width: 80%
#| out-height: 40%

library(ggforce)

tibble(start = rep(c(-pi / 2, pi / 2), 4),
       type = rep(c("Proficient", "Non-proficient"), 4),
       skill = rep(c("Finishing", "Possession", "Defending", "Goalkeeping"),
                   each = 2),
       x = rep(c(3, 6, 9, 12), each = 2),
       y = 0) |> 
  ggplot() +
  geom_arc_bar(aes(x0 = x, y0 = y, r0 = 0, r = 1.2, start = start,
                   end = start + pi, fill = type), color = "white",
               show.legend = FALSE, radius = 0) +
  geom_text(data = ~slice(., c(1, 3, 5, 7)),
            aes(x = x, y = 0.2, label = skill), size = 5) +
  scale_fill_manual(values = c("Proficient" = palette_measr[3],
                               "Non-proficient" = palette_measr[1])) +
  coord_equal() +
  theme_void()
```

:::
:::

* Attributes are categorical, often dichotomous (e.g., proficient vs. non-proficient)

## Diagnostic classification models {background-image="figure/backgrounds/default.png" background-size="contain"}

* DCMs place individuals into groups according to proficiency of multiple attributes

```{r}
library(gt)
library(gtExtras)

team_profiles <- tribble(
  ~team,            ~chances, ~finishing, ~possession, ~defending, ~goalkeeping,
  "Kansas City",     "check",    "xmark",     "check",    "xmark",      "xmark",
  "Angel City",      "xmark",    "check",     "check",    "check",      "xmark",
  "San Diego Wave",  "xmark",    "check",     "xmark",    "xmark",      "check",
  "Portland",        "check",    "check",     "check",    "check",      "xmark",
)

logos |> 
  inner_join(team_profiles, by = "team") |> 
  select(logo, finishing, possession, defending, goalkeeping) |>
  gt() |> 
  cols_label(logo = "") |> 
  cols_width(logo ~ px(100),
             everything() ~ px(150)) |> 
  gt_img_rows(columns = logo, img_source = "local", height = 50) |> 
  gt_fa_column(finishing, align = "center", height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(possession, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(defending, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(goalkeeping, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_theme_measr() |> 
  tab_options(table.font.size = 24)
```

## Answering more questions {background-image="figure/backgrounds/default.png" background-size="contain"}

* Why is Kansas City so low?
  * Poor finishing, defending, and goalkeeping
* What aspects are teams competent/proficient in?
  * DCMs provide classifications directly

## Diagnostic psychometrics {background-image="figure/backgrounds/default.png" background-size="contain"}

* Designed to be multidimensional
* No continuum of student achievement
* Categorical constructs
  * Usually binary (e.g., master/nonmaster, proficient/not proficient)

* Several different names in the literature
  * Diagnostic classification models (DCMs)
  * Cognitive diagnostic models (CDMs)
  * Skills assessment models
  * Latent response models
  * Restricted latent class models

## When are DCMs appropriate? {background-image="figure/backgrounds/default.png" background-size="contain"}

Success depends on:

1. Domain definitions
    * What are the attributes we're trying to measure?
    * Are the attributes measurable (e.g., with assessment items)?
  
2. Alignment of purpose between assessment and model
    * Is classification the purpose?

## Example applications {background-image="figure/backgrounds/default.png" background-size="contain"}

* **Educational measurement:** The competencies that student is or is not proficient in
  * Latent knowledge, skills, or understandings
  * Used for tailored instruction and remediation
  
* **Psychiatric assessment:** The DSM criteria that an individual meets
  * Broader diagnosis of a disorder

## When are DCMs not appropriate? {background-image="figure/backgrounds/default.png" background-size="contain"}

* When the goal is to place individuals on a scale

* DCMs do not distinguish within classes

:::{.columns}
:::{.column width="50%"}
<br>
```{r}
logos |> 
  inner_join(team_profiles, by = "team") |> 
  filter(team %in% c("Angel City", "Portland")) |> 
  select(logo, finishing, possession, defending, goalkeeping) |>
  gt() |> 
  cols_label(logo = "") |> 
  cols_width(logo ~ px(100),
             everything() ~ px(120)) |> 
  gt_img_rows(columns = logo, img_source = "local", height = 50) |> 
  gt_fa_column(finishing, align = "center", height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(possession, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(defending, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_fa_column(goalkeeping, align = "center",, height = "40px",
               palette = c("xmark" = palette_measr[2], "check" = palette_measr[4])) |> 
  gt_theme_measr() |> 
  tab_options(table.font.size = 18)
```
:::

:::{.column width="50%"}
```{r}
table_logos <- logos |> 
  filter(team %in% c("Angel City", "Portland")) |> 
  mutate(y = 0.02)

prior(normal(0, 1), class = "intercept") |> 
  parse_dist(prior_def) |> 
  ggplot(aes(xdist = .dist_obj)) +
  stat_slab(color = palette_measr[1], fill = palette_measr[3]) -> base

width <- 0.5
for (i in 1:nrow(table_logos)) {
  img <- as.raster(image_read(table_logos$logo[i]))
  
  base <- base +
    annotation_raster(img,
                      table_logos$x[i] - (width / 2),
                      table_logos$x[i] + (width / 2),
                      table_logos$y[i], table_logos$y[i] + 0.15)
}

base +
  labs(x = "Team Strength", y = NULL) +
  theme(axis.text.y = element_blank(),
        axis.title.y = element_blank())
```

:::
:::

## Conceptual foundation summary {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column width="50%"}
* DCMs are psychometric models designed to classify
  * We can define our attributes in any wya that we choose
  * Items depend on the attribute definitions
  * Classifications are probabilistic
  * Takes fewer items to classify than to rank/scale
:::

:::{.column .fragment width="50%"}
* DCMs provide valuable information with more feasible data demands than other psychometric models
  * Higher reliability than IRT/MIRT models
  * Naturally accommodates multidimensionality
  * Complex item structures possible
  * Criterion-referenced interpretations
  * Alignment of assessment goals and psychometric model
:::
:::

# Statistical foundations {background-image="figure/backgrounds/section.png" background-size="contain"}

## Statistical foundation {background-image="figure/backgrounds/default.png" background-size="contain"}

* Latent class models use responses to probabilistically place individuals into latent classes

* DCMs are confirmatory latent class models
  * Latent classes specified *a priori* as attribute profiles
  * Q-matrx specifies item-attribute structure
  * Person parameters are attribute proficiency probabilities
  
## Terminology {background-image="figure/backgrounds/default.png" background-size="contain"}

* **Respondents** (*r*): The individuals from whom behavioral data are collected
  * For today, this is dichotomous assessment item responses
  * Not limited to only item responses in practice

* **Items** (*i*): Assessment questions used to classify/diagnose respondents

* **Attributes** (*a*): Unobserved latent categorical characteristics underlying the behaviors (i.e., diagnostic status)
  * Latent variables

* **Diagnostic Assessment**: The method used to elicit behavioral data

## Attribute profiles {background-image="figure/backgrounds/default.png" background-size="contain"}

* With binary attributes, there are $2^A$ possible profiles

* Example 2-attribute assessment:

:::center
[0, 0]  
[1, 0]  
[0, 1]  
[1, 1]  
:::

## DCMs as latent class models {background-image="figure/backgrounds/default.png" background-size="contain"}

$$
\color{#D55E00}{P(X_r=x_r)} = \sum_{c=1}^C\color{#009E73}{\nu_c} \prod_{i=1}^I\color{#56B4E9}{\pi_{ic}^{x_{ir}}(1-\pi_{ic})^{1 - x_{ir}}}
$$

:::{.fragment}
```{=html}
<span class="eqn-box", style="background-color: #D55E00; color: white">Observed data: Probability of observing examinee <em>r</em>'s item reponses</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box", style="background-color: #009E73; color: white">Structural component: Proportion of examinees in each class</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box", style="background-color: #56B4E9; color: white">Measurement component: Product of item response probabilities</span>
```
:::

## Item response probabilities {background-image="figure/backgrounds/default.png" background-size="contain"}

* Numerous DCMs have been developed over the years

* Each DCM makes different assumptions about how attributes proficiencies combine/interact to produce an item response

## Non-compensatory DCMs {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column width="30%"}
* Must be proficient in all attributes measured by the item to provide a correct response

* Deterministic inputs, noisy "and" gate (DINA; [de la Torre & Douglas, 2004](https://doi.org/10.1007/BF02295640))
:::

:::{.column width="70%"}
```{r}
#| out-width: 100%
#| out-height: 50%
tibble(x = c("[0, 0]", "[1, 0]", "[0, 1]", "[1, 1]"),
       y = c(0.15, 0.15, 0.15, 0.90)) |> 
  mutate(x = fct_inorder(x),
         prof = y > 0.5) |> 
  ggplot(aes(x = x, y = y, fill = prof)) +
  geom_col(show.legend = FALSE) +
  expand_limits(y = c(0, 1)) +
  scale_y_percent(breaks = seq(0, 1, by = 0.2)) +
  scale_fill_manual(values = c(`TRUE` = palette_measr[4],
                               `FALSE` = palette_measr[2])) +
  labs(x = "Profile", y = "Probability of Correct Response")
```
:::
:::

## Compensatory DCMs {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column width="30%"}
* Must be proficient in at least 1 attribute measured by the item to provide a correct response

* Deterministic inputs, noisy "or" gate (DINO; [Templin & Henson, 2006](https://doi.org/10.1037/1082-989X.11.3.287))
:::

:::{.column width="70%"}
```{r}
#| out-width: 100%
#| out-height: 50%
tibble(x = c("[0, 0]", "[1, 0]", "[0, 1]", "[1, 1]"),
       y = c(0.15, 0.90, 0.90, 0.90)) |> 
  mutate(x = fct_inorder(x),
         prof = y > 0.5) |> 
  ggplot(aes(x = x, y = y, fill = prof)) +
  geom_col(show.legend = FALSE) +
  expand_limits(y = c(0, 1)) +
  scale_y_percent(breaks = seq(0, 1, by = 0.2)) +
  scale_fill_manual(values = c(`TRUE` = palette_measr[4],
                               `FALSE` = palette_measr[2])) +
  labs(x = "Profile", y = "Probability of Correct Response")
```
:::
:::

## General DCMs {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column width="30%"}
* Different response probabilities for each class (partially compensatory)

* Log-linear cognitive diagnostic model (LCDM; [Henson et al., 2009](https://doi.org/10.1007/s11336-008-9089-5))

* This will be our focus
:::

:::{.column width="70%"}
```{r}
#| out-width: 100%
#| out-height: 50%
tibble(x = c("[0, 0]", "[1, 0]", "[0, 1]", "[1, 1]"),
       y = c(0.15, 0.60, 0.40, 0.90)) |> 
  mutate(x = fct_inorder(x),
         prof = case_when(y < 0.2 ~ "FALSE",
                          y > 0.8 ~ "TRUE",
                          TRUE ~ "Partial")) |> 
  ggplot(aes(x = x, y = y, fill = prof)) +
  geom_col(show.legend = FALSE) +
  expand_limits(y = c(0, 1)) +
  scale_y_percent(breaks = seq(0, 1, by = 0.2)) +
  scale_fill_manual(values = c("TRUE" = palette_measr[4],
                               "FALSE" = palette_measr[2],
                               "Partial" = "#4B3F72")) +
  labs(x = "Profile", y = "Probability of Correct Response")
```
:::
:::

## Simple structure LCDM {background-image="figure/backgrounds/default.png" background-size="contain"}

Item measures only 1 attribute

$$
\text{logit}(X_i = 1) = \color{#D7263D}{\lambda_{i,0}} + \color{#219EBC}{\lambda_{i,1(1)}}\color{#009E73}{\alpha}
$$

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #D7263D; color: white">&lambda;<sub>i,0</sub>: Log-odds when not proficient</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #219EBC; color: white">&lambda;<sub>i,1(1)</sub>: Increase in log-odds when proficient</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #009E73; color: white">&alpha;: Attribute proficiency status (either 0 or 1)</span>
```
:::

## Subscript notation {background-image="figure/backgrounds/default.png" background-size="contain"}

:::{.columns}
:::{.column .center .larger width="40%"}

</br></br>

```{=html}
&lambda;<sub>i,e(&alpha;<sub>1</sub>)</sub>
```

:::

:::{.column width="60%"}
:::{.fragment}
- *i* = The item to which the parameter belongs
:::

:::{.fragment}
- *e* = The level of the effect
  - 0 = intercept
  - 1 = main effect
  - 2 = two-way interaction
  - 3 = three-way interaction
  - Etc.
:::

:::{.fragment}
- $(\alpha_1,...)$ = The attributes to which the effect applies
  - The same number of attributes as listed in subscript 2
:::
:::
:::

## Complex structure LCDM {background-image="figure/backgrounds/default.png" background-size="contain"}

Item measures multiple attributes

$$
\text{logit}(X_i = 1) = \color{#D7263D}{\lambda_{i,0}} + \color{#4B3F72}{\lambda_{i,1(1)}\alpha_1} + \color{#9589BE}{\lambda_{i,1(2)}\alpha_2} +
\color{#219EBC}{\lambda_{i,2(1,2)}\alpha_1\alpha_2}
$$

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #D7263D; color: white">Log-odds when proficient in neither attribute</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #4B3F72; color: white">Increase in log-odds when proficient in attribute 1</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #9589BE; color: white">Increase in log-odds when proficient in attribute 2</span>
```
:::

:::{.fragment}
```{=html}
<span class="eqn-box2", style="background-color: #219EBC; color: white">Change in log-odds when proficient in both attributes</span>
```
:::


## Defining DCM structures {background-image="figure/backgrounds/default.png" background-size="contain"}

* Attribute and item relationships are defined in the Q-matrix

* Q-matrix
  * *I* $\times$ *A* matrix
  * 0 = Attribute is not measured by the item
  * 1 = Attribute is measured by the item
  
## The LCDM as a general DCM {background-image="figure/backgrounds/default.png" background-size="contain"}

* So called "general" DCM because the LCDM subsumes other DCMs

* Constraints on item parameters make LCDM equivalent to other DCMs (e.g., DINA and DINO)
  * Interactive Shiny app: <https://atlas-aai.shinyapps.io/dcm-probs/>
  * DINA
    * Only the intercept and highest-order interaction are non-0
  * DINO
    * All main effects are equal
    * All two-way interactions are -1 $\times$ main effect
    * All three-way interactions are -1 $\times$ two-way interaction (i.e., equal to main effects)
    * Etc.

## The rest of today {background-image="figure/backgrounds/default.png" background-size="contain"}

* Estimating DCMs with [Stan](https://mc-stan.org) and [measr](https://measr.info)

* Evaluating DCMs with [measr](https://measr.info)

# {.closing data-menu-title="Closing" background-image="figure/backgrounds/plain-title.png" background-size="contain"}

</br>

:::{.end-title color="white" font-size="200%"}
Diagnostic classification models
:::

:::{.end-subtitle}
A brief introduction
:::

:::{.center}
<https://stancon2023.measr.info>
:::
